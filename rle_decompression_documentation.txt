Inizialmente viene chiesta in input una sequenza di stringhe del tipo: count*bit ecc... quindi noi avremo una situazione del genere esempio:
input: 3*0, 5*1, 1*0 -> 000111110 questo dovrebbe essere l'output.

Successivamente vengono inizializzate 3 liste:
	- counter
	- result 
	- support
alcune liste già parlano da sole dato il loro nome, comunque counter serve per contenere il numero di occorenze di ogni bit, result serve per contenere il risultato invece supporto serve per contenere
la posizione in cui si trova l'* in ogni elemento di sequence. E poi viene inizializzato un contatore che parte da 0. 

Adesso vengono realizzati due cicli for tutti e due che si iterano per la lunghezza di sequence, in pratica questi doppi cicli fanno in modo di estrarre il numero di occorenze di ogni bit aggiungerlo alla lista counter ed allo stesso modo aggiungere la posizione in cui si trova l'asterisco negli elementi.
Il modo con cui viene estratto il numero di occorenze avviene iterando count finchè ogni singolo carattere è diverso da * apena non è più diverso il ciclo nidificato si interrompe e alla lista counter ci va il valore che va da 0 a count convertito in intero.
Ora che abbiamo tutti i numeri di occorenze non basta altro che iterare per il numero di occorenze e all'interno del ciclo mettere un altro ciclo che si itera che il valore di counter i-esimo dentro il quale aggiungerò alla lista il bit che si troverà alla posizione i-esima + 1
del vettore support in tale modo riesco a trovare il bit che si ripete counter[i] volte.
Infine mando a schermo result tutto attaccato.